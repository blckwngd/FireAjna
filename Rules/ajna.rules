rules_version = "2";
service cloud.firestore {
  match /databases/{database}/documents {
    
    function is____Model(data, prev) {
      return data.keys().hasAll(['url'])
      && data.size() >= 1 && data.size() <= 3
      && data.keys().hasOnly(['url', 'scale', 'animation'])
      && data.url is string
      && (
        !data.keys().hasAny(['scale'])
        || (
          (data.scale is float || data.scale is int)
          || ( data.scale is list && data.scale.size() <= 3 && data.scale.size() >= 0
            && (
              !(data!=null && 'scale' in data && data.scale is list && data.scale.size() > 0) ||  data.scale[0] == null  || (data.scale[0] is float || data.scale[0] is int)
            )
            && (
              !(data!=null && 'scale' in data && data.scale is list && data.scale.size() > 1) ||  data.scale[1] == null  || (data.scale[1] is float || data.scale[1] is int)
            )
            && (
              !(data!=null && 'scale' in data && data.scale is list && data.scale.size() > 2) ||  data.scale[2] == null  || (data.scale[2] is float || data.scale[2] is int)
            )
          )
        )
      )
      && (
        !data.keys().hasAny(['animation'])
        || data.animation is string
      );
    }
    function is____Permission(data, prev) {
      return data == "r"
      || data == "w"
      || data == "x"
      || data == "d";
    }
    function is____Permissions(data, prev) {
      return data.keys().hasAll(['a', 'r'])
      && data.size() >= 2 && data.size() <= 4
      && data.keys().hasOnly(['a', 'r', 'u', 'g'])
      && data.a is list
      && data.r is list
      && (
        !data.keys().hasAny(['u'])
        || data.u is map
      )
      && (
        !data.keys().hasAny(['g'])
        || data.g is map
      );
    }
    function is____AjnaObjectData(data, prev) {
      return data.keys().hasAll(['name', 'coordinates', 'owner', 'p'])
      && data.size() >= 4 && data.size() <= 10
      && data.keys().hasOnly(['name', 'description', 'coordinates', 'altitude', 'altitudeClamp', 'model', 'actions', 'owner', 'agent', 'p'])
      && data.name is string
      && (
        !data.keys().hasAny(['description'])
        || data.description is string
      )
      && data.coordinates is latlng
      && (
        !data.keys().hasAny(['altitude'])
        || (data.altitude is float || data.altitude is int)
      )
      && (
        !data.keys().hasAny(['altitudeClamp'])
        || (
          data.altitudeClamp == "s"
          || data.altitudeClamp == "g"
        )
      )
      && (
        !data.keys().hasAny(['model'])
        || (!(prev!=null && 'model' in prev) && is____Model(data.model, null) || prev!=null && 'model' in prev && is____Model(data.model, prev.model))
      )
      && (
        !data.keys().hasAny(['actions'])
        || data.actions is map
      )
      && data.owner is string
      && (
        !data.keys().hasAny(['agent'])
        || data.agent is string
      )
      && (!(prev!=null && 'p' in prev) && is____Permissions(data.p, null) || prev!=null && 'p' in prev && is____Permissions(data.p, prev.p));
    }
    function is____AjnaObject(data, prev) {
      return data.keys().hasAll(['d', 'g', 'l'])
      && data.size() >= 3 && data.size() <= 3
      && data.keys().hasOnly(['d', 'g', 'l'])
      && (!(prev!=null && 'd' in prev) && is____AjnaObjectData(data.d, null) || prev!=null && 'd' in prev && is____AjnaObjectData(data.d, prev.d))
      && data.g is string
      && data.l is latlng;
    }
    function is____PartialAjnaObject(data, prev) {
      return data.keys().hasAll(['d', 'g', 'l'])
      && data.size() >= 3 && data.size() <= 3
      && data.keys().hasOnly(['d', 'g', 'l'])
      && true
      && data.g is string
      && data.l is latlng;
    }
    function is____Message(data, prev) {
      return data.keys().hasAll(['sender', 'type', 'parameters'])
      && data.size() >= 3 && data.size() <= 5
      && data.keys().hasOnly(['sender', 'sendingObject', 'receivingObject', 'type', 'parameters'])
      && data.sender is string
      && (
        !data.keys().hasAny(['sendingObject'])
        || data.sendingObject is string
      )
      && (
        !data.keys().hasAny(['receivingObject'])
        || data.receivingObject is string
      )
      && data.type is string
      && true;
    }
    function is____User(data, prev) {
      return data.keys().hasAll(['firstName', 'lastName'])
      && data.size() >= 2 && data.size() <= 2
      && data.keys().hasOnly(['firstName', 'lastName'])
      && data.firstName is string
      && data.lastName is string;
    }
    function isLoggedIn() {
      return (request.auth != null) && (request.auth.uid != null);
    }
    function isPermissioned(subj) {
      return subj.p != null;
    }
    function isUserPermissioned(subj) {
      return (subj.p != null) && (subj.p.u != null);
    }
    function isGroupPermissioned(subj) {
      return (subj.p != null) && (subj.p.g != null);
    }
    function isAnonymousPermissioned(subj) {
      return (subj.p != null) && (subj.p.a != null);
    }
    function isRegisteredPermissioned(subj) {
      return (subj.p != null) && (subj.p.r != null);
    }
    function hasAnonymousPerm(subj, perm) {
      return isAnonymousPermissioned(subj) && perm in subj.p.a;
    }
    function hasUserPerm(subj, perm) {
      return isLoggedIn() && isUserPermissioned(subj) && request.auth.uid in (subj.p.u.keys()) && perm in subj.p.u[request.auth.uid];
    }
    function isOwner(subj) {
      return subj.owner == request.auth.uid;
    }
    function permissionsNotTouched() {
      return (!request.resource.data.d.keys().hasAny(['p']) || (request.resource.data.d.p == resource.data.d.p));
    }
    function isSender(msg) {
      return msg.sender == request.auth.uid;
    }
    match /objects/{object} {
      function is______PathType(data, prev) {
        return (!(prev!=null) && is____PartialAjnaObject(data, null) || prev!=null && is____PartialAjnaObject(data, prev));
      }
      allow update: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && (isOwner(resource.data.d) || (permissionsNotTouched() && (hasAnonymousPerm(resource.data.d, 'w') || hasUserPerm(resource.data.d, 'w'))));
    }
    match /objects/{object} {
      function is______PathType(data, prev) {
        return (!(prev!=null) && is____AjnaObject(data, null) || prev!=null && is____AjnaObject(data, prev));
      }
      allow read: if !isPermissioned(resource.data.d) || isOwner(resource.data.d) || hasAnonymousPerm(resource.data.d, 'r');
      allow write: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && (isOwner(resource.data.d) || (permissionsNotTouched() && (hasAnonymousPerm(resource.data.d, 'w') || hasUserPerm(resource.data.d, 'w'))));
      allow delete: if isOwner(resource.data.d) || hasAnonymousPerm(resource.data.d, 'd') || hasUserPerm(resource.data.d, 'd');
      allow create: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && (isLoggedIn());
      match /inbox/{message} {
        function is______PathType(data, prev) {
          return (!(prev!=null) && is____Message(data, null) || prev!=null && is____Message(data, prev));
        }
        allow create: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && (isSender(resource.data));
        allow write: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && (isSender(resource.data) || isOwner(get(/databases/$(database)/documents/objects/$(object)).data.d));
      }
      match /inbox/{message} {
        allow delete: if isSender(resource.data) || isOwner(get(/databases/$(database)/documents/objects/$(object)).data.d);
        allow read, get, list: if isSender(resource.data) || isOwner(get(/databases/$(database)/documents/objects/$(object)).data.d);
      }
    }
    match /users/{userId} {
      function is______PathType(data, prev) {
        return (!(prev!=null) && is____User(data, null) || prev!=null && is____User(data, prev));
      }
      allow create, read, get, list, delete: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && ((request.auth.id == userId));
      match /inbox/{message} {
        function is______PathType(data, prev) {
          return (!(prev!=null) && is____Message(data, null) || prev!=null && is____Message(data, prev));
        }
        allow create, read, get, list, delete: if (!(resource!=null && resource.data!=null) && is______PathType(request.resource.data, null) || resource!=null && resource.data!=null && is______PathType(request.resource.data, resource.data)) && (isSender(resource.data) || (request.auth.id == userId));
      }
    }
  }
}